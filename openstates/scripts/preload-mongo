#!/bin/bash
set -e

USAGE="$(basename "$0") [-h] [-c | --cleanup] -- Download and restore latest Open States MongoDB data dump.

where:
    -h  show this help text
    -c  remove temporary work files and directory automatically"

CLEANUP=false
CWD_DIR=`pwd`

# Check for cleanup option.
for i in "$@"
do
case $i in
    -h|--help)
        echo ${USAGE}
        exit
        ;;
    -c|--cleanup)
        CLEANUP=true
        shift
        ;;
    *)
        echo "Illegal option: ${i}"
        exit 1
        ;;
esac
done

# Create temporary work directory and navigate to it.
echo "Creating temporary work directory..."
if [ "x$(which gmktemp)" != "x" ]; then
	TEMP_DIR=$(gmktemp -d tmp.XXXXXXXXXX)
else
	TEMP_DIR=$(mktemp -d tmp.XXXXXXXXXX)
fi

if [ -d ${TEMP_DIR} ] ; then
    echo "Created directory ${TEMP_DIR}."
    cd ${TEMP_DIR}
fi

# URL to download latest MongoDB dumps.
URL="http://static.openstates.org.s3.amazonaws.com/mongo/latest-mongo-dump.tar.gz"

# Download and unpack MongoDB dump archive.
wget ${URL}
tar -zxvf latest-mongo-dump.tar.gz

# Restore to database from data dump.
mongorestore --drop dump/

# Return to original directory.
cd ${CWD_DIR}

# If cleanup option is set, discard work directory.
if ${CLEANUP} ; then
    echo "Attempting to remove ${TEMP_DIR}..."
    # This seems sketchy to me.  There's probably a vulnerability here.
    rm -rf ${TEMP_DIR}

    if [ -d "${TEMP_DIR}" ] ; then
        echo "Unable to remove ${TEMP_DIR}.  Please check permissions and remove manually."
    else
        echo "${TEMP_DIR} successfully removed."
    fi
else
    echo "Cleanup option not set. Temporary work directory must be removed manually."
fi

exit 0

